import fs from "fs";
import prettier from "prettier";
import { HyperAgentConfig } from "@/types";

export function initActionScript(
  actionLogFile: string,
  task: string,
  agentConfig?: HyperAgentConfig<"Local" | "Hyperbrowser">,
) {
  fs.appendFileSync(
    actionLogFile,
    `
    /*
    This script is generated by Hyperagent.
    It is used to execute the task and log the actions.
    Task: ${task}
    */

    import { HyperAgent } from "@hyperbrowser/agent";
    import { waitForElementToBeEnabled, waitForElementToBeStable } from "@hyperbrowser/agent/actions";
    import { parseMarkdown, sleep } from "@hyperbrowser/agent/utils";
    import { VariableExtractionOutput } from "@hyperbrowser/agent/types";


    (async () => {
      const agent = new HyperAgent(${agentConfig ? JSON.stringify(agentConfig, null, 2) : ""});
      const page = await agent.newPage();
      if (!page) {
        throw new Error("No page found");
      }

      const ctx = {
        page: page,
            llm: agent.llm,
            variables: {} as Record<string, Record<string, unknown>>, // Record<string, HyperVariable>
          };

    `,
  );

  // Add main execution function
  fs.appendFileSync(
    actionLogFile,
    `
` + `\n\n`,
  );
}

export async function wrapUpActionScript(actionLogFile: string) {
  fs.appendFileSync(
    actionLogFile,
    `

    await agent.closeAgent();
    console.log("Action script complete");

  `,
  );
  fs.appendFileSync(actionLogFile, `})();`);
  const formatted = await prettier.format(
    fs.readFileSync(actionLogFile, "utf-8"),
    { filepath: actionLogFile },
  );
  fs.writeFileSync(actionLogFile, formatted);
}
